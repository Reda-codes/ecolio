{"ast":null,"code":"import { callExternalApi } from \"./external-api.service\";\nconst apiServerUrl = process.env.REACT_APP_API_SERVER_URL;\nexport const getPublicResource = async () => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/public`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};\nexport const getProtectedResource = async accessToken => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/protected`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};\nexport const getAdminResource = async (accessToken, user) => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/admin`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n      nickname: `${user.nickname}`\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};","map":{"version":3,"names":["callExternalApi","apiServerUrl","process","env","REACT_APP_API_SERVER_URL","getPublicResource","config","url","method","headers","data","error","getProtectedResource","accessToken","Authorization","getAdminResource","user","nickname"],"sources":["/home/reda/ecolio/frontend/src/services/message.service.js"],"sourcesContent":["import { callExternalApi } from \"./external-api.service\";\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER_URL;\n\nexport const getPublicResource = async () => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/public`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n\nexport const getProtectedResource = async (accessToken) => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/protected`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n\nexport const getAdminResource = async (accessToken, user) => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/admin`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n      nickname: `${user.nickname}`,\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,wBAAhC;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAjC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,YAAY;EAC3C,MAAMC,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEN,YAAa,sBADR;IAEbO,MAAM,EAAE,KAFK;IAGbC,OAAO,EAAE;MACP,gBAAgB;IADT;EAHI,CAAf;EAQA,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAkB,MAAMX,eAAe,CAAC;IAAEM;EAAF,CAAD,CAA7C;EAEA,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IADT;IAELC;EAFK,CAAP;AAID,CAfM;AAiBP,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,WAAP,IAAuB;EACzD,MAAMP,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEN,YAAa,yBADR;IAEbO,MAAM,EAAE,KAFK;IAGbC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPK,aAAa,EAAG,UAASD,WAAY;IAF9B;EAHI,CAAf;EASA,MAAM;IAAEH,IAAF;IAAQC;EAAR,IAAkB,MAAMX,eAAe,CAAC;IAAEM;EAAF,CAAD,CAA7C;EAEA,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IADT;IAELC;EAFK,CAAP;AAID,CAhBM;AAkBP,OAAO,MAAMI,gBAAgB,GAAG,OAAOF,WAAP,EAAoBG,IAApB,KAA6B;EAC3D,MAAMV,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEN,YAAa,qBADR;IAEbO,MAAM,EAAE,KAFK;IAGbC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPK,aAAa,EAAG,UAASD,WAAY,EAF9B;MAGPI,QAAQ,EAAG,GAAED,IAAI,CAACC,QAAS;IAHpB;EAHI,CAAf;EAUA,MAAM;IAAEP,IAAF;IAAQC;EAAR,IAAkB,MAAMX,eAAe,CAAC;IAAEM;EAAF,CAAD,CAA7C;EAEA,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IADT;IAELC;EAFK,CAAP;AAID,CAjBM"},"metadata":{},"sourceType":"module"}