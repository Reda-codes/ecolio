{"ast":null,"code":"import { callExternalApi } from \"./external-api.service\";\nconst apiServerUrl = process.env.REACT_APP_API_SERVER_URL;\nexport const getPublicResource = async () => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/public`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\"\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};\nexport const getProtectedResource = async (accessToken, sub) => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/protected`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n      sub: `${sub}`\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};\nexport const getAdminResource = async accessToken => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/admin`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};\nexport const getMetadata = async (accessToken, userId) => {\n  const config = {\n    url: `${process.env.REACT_APP_AUTH0_DOMAIN}/api/v2/users/`,\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n  const {\n    data,\n    error\n  } = await callExternalApi({\n    config\n  });\n  return {\n    data: data || null,\n    error\n  };\n};","map":{"version":3,"names":["callExternalApi","apiServerUrl","process","env","REACT_APP_API_SERVER_URL","getPublicResource","config","url","method","headers","data","error","getProtectedResource","accessToken","sub","Authorization","getAdminResource","getMetadata","userId","REACT_APP_AUTH0_DOMAIN"],"sources":["/home/reda/ecolio/frontend/src/services/message.service.js"],"sourcesContent":["import { callExternalApi } from \"./external-api.service\";\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER_URL;\n\nexport const getPublicResource = async () => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/public`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n\nexport const getProtectedResource = async (accessToken, sub) => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/protected`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n      sub: `${sub}`,\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n\nexport const getAdminResource = async (accessToken) => {\n  const config = {\n    url: `${apiServerUrl}/api/messages/admin`,\n    method: \"GET\",\n    headers: {\n      \"content-type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`,\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n\nexport const getMetadata = async (accessToken, userId) => {\n  const config = {\n    url: `${process.env.REACT_APP_AUTH0_DOMAIN}/api/v2/users/`,\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  };\n\n  const { data, error } = await callExternalApi({ config });\n\n  return {\n    data: data || null,\n    error,\n  };\n};\n"],"mappings":"AAAA,SAASA,eAAT,QAAgC,wBAAhC;AAEA,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAjC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,YAAY;EAC3C,MAAMC,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEN,YAAa,sBADR;IAEbO,MAAM,EAAE,KAFK;IAGbC,OAAO,EAAE;MACP,gBAAgB;IADT;EAHI,CAAf;EAQA,MAAM;IAAEC,IAAF;IAAQC;EAAR,IAAkB,MAAMX,eAAe,CAAC;IAAEM;EAAF,CAAD,CAA7C;EAEA,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IADT;IAELC;EAFK,CAAP;AAID,CAfM;AAiBP,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,WAAP,EAAoBC,GAApB,KAA4B;EAC9D,MAAMR,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEN,YAAa,yBADR;IAEbO,MAAM,EAAE,KAFK;IAGbC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPM,aAAa,EAAG,UAASF,WAAY,EAF9B;MAGPC,GAAG,EAAG,GAAEA,GAAI;IAHL;EAHI,CAAf;EAUA,MAAM;IAAEJ,IAAF;IAAQC;EAAR,IAAkB,MAAMX,eAAe,CAAC;IAAEM;EAAF,CAAD,CAA7C;EAEA,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IADT;IAELC;EAFK,CAAP;AAID,CAjBM;AAmBP,OAAO,MAAMK,gBAAgB,GAAG,MAAOH,WAAP,IAAuB;EACrD,MAAMP,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEN,YAAa,qBADR;IAEbO,MAAM,EAAE,KAFK;IAGbC,OAAO,EAAE;MACP,gBAAgB,kBADT;MAEPM,aAAa,EAAG,UAASF,WAAY;IAF9B;EAHI,CAAf;EASA,MAAM;IAAEH,IAAF;IAAQC;EAAR,IAAkB,MAAMX,eAAe,CAAC;IAAEM;EAAF,CAAD,CAA7C;EAEA,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IADT;IAELC;EAFK,CAAP;AAID,CAhBM;AAkBP,OAAO,MAAMM,WAAW,GAAG,OAAOJ,WAAP,EAAoBK,MAApB,KAA+B;EACxD,MAAMZ,MAAM,GAAG;IACbC,GAAG,EAAG,GAAEL,OAAO,CAACC,GAAR,CAAYgB,sBAAuB,gBAD9B;IAEbX,MAAM,EAAE,KAFK;IAGbC,OAAO,EAAE;MACPM,aAAa,EAAG,UAASF,WAAY;IAD9B;EAHI,CAAf;EAQA,MAAM;IAAEH,IAAF;IAAQC;EAAR,IAAkB,MAAMX,eAAe,CAAC;IAAEM;EAAF,CAAD,CAA7C;EAEA,OAAO;IACLI,IAAI,EAAEA,IAAI,IAAI,IADT;IAELC;EAFK,CAAP;AAID,CAfM"},"metadata":{},"sourceType":"module"}